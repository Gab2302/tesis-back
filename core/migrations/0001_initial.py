# Generated by Django 5.2.3 on 2025-06-25 21:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('image_path', models.TextField(blank=True, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('calories', models.IntegerField(blank=True, null=True)),
                ('protein_g', models.IntegerField(blank=True, null=True)),
                ('carb_g', models.IntegerField(blank=True, null=True)),
                ('fat_g', models.IntegerField(blank=True, null=True)),
                ('is_validated_by_nutritionist', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('role', models.CharField(choices=[('paciente', 'Paciente'), ('nutricionista', 'Nutricionista')], max_length=20)),
                ('nutritionist_code', models.CharField(blank=True, max_length=12, null=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatientNutritionist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linked_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('nutritionist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutritionist_links', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_links', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=1, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('height_cm', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('weight_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('desired_weight_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('goal_type', models.CharField(blank=True, choices=[('perder', 'Perder'), ('ganar', 'Ganar'), ('mantener', 'Mantener')], max_length=10, null=True)),
                ('goal_speed', models.CharField(blank=True, choices=[('lento', 'Lento'), ('recomendado', 'Recomendado'), ('rápido', 'Rápido')], max_length=15, null=True)),
                ('daily_kcal_target', models.IntegerField(blank=True, null=True)),
                ('daily_protein_g', models.IntegerField(blank=True, null=True)),
                ('daily_carb_g', models.IntegerField(blank=True, null=True)),
                ('daily_fat_g', models.IntegerField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProgressLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('calories_consumed', models.IntegerField(blank=True, null=True)),
                ('protein_g', models.IntegerField(blank=True, null=True)),
                ('carb_g', models.IntegerField(blank=True, null=True)),
                ('fat_g', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Scan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_path', models.TextField(blank=True, null=True)),
                ('scan_datetime', models.DateTimeField(auto_now_add=True)),
                ('ocr_text', models.TextField(blank=True, null=True)),
                ('openai_summary', models.TextField(blank=True, null=True)),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('calories', models.IntegerField(blank=True, null=True)),
                ('protein_g', models.IntegerField(blank=True, null=True)),
                ('carb_g', models.IntegerField(blank=True, null=True)),
                ('fat_g', models.IntegerField(blank=True, null=True)),
                ('health_comment', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScanRecipeSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.recipe')),
                ('scan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.scan')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('due_date', models.DateField()),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(choices=[('receta', 'Receta'), ('ejercicio', 'Ejercicio'), ('otro', 'Otro')], default='otro', max_length=20)),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
